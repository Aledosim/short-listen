import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'

import { fetchTracksChart } from '../../utils/apiclient'

const initialState = {
  value: [],
  status: 'idle',  // idle, loading, suceeded, failed
  error: null,
}

export async function fetchTrackChart(params) {
  console.log("Fetching data")

  var index
  var limit

  if (params){
    index = params.index
    limit = params.limit
  }

  const tracksChart = await fetchTracksChart({index: index, limit: limit})

  return tracksChart
}

export const trackChartEnded = createAsyncThunk(
  'trackList/trackChartEnded',
  fetchTrackChart,
  {
    condition: (arg, { getState }) => {
      const { trackList } = getState()
      const fetchStatus = trackList.status
      if (fetchStatus === 'loading'){
        return false
      }
    }
  }
)

export const fetchMoreData = createAsyncThunk(
  'trackList/fetchMoreData',

)

export const trackListSlice = createSlice({
  name: 'trackList',
  initialState,
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: {
    [trackChartEnded.pending]: (state) => {state.status = 'loading'},
    [trackChartEnded.fulfilled]: (state, action) => {

      const chartTracks = action.payload.data
      const newTracks = chartTracks.map( track => {
        return {
          cover: track.album.cover,
          id: track.id,
          link: track.link,
          preview: track.preview,
          singer: track.artist.name,
          time: track.duration,
          title: track.title
        }
      })

      state.status = 'suceeded'
      state.value = state.value.concat(newTracks)
    }
  },
})

// export const {} = trackListSlice.actions

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const selectTrackList = (state) => state.trackList.value

export default trackListSlice.reducer
