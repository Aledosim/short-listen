import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'

const initialState = {
	value: '',
  status: 'idle',  // idle, loading, suceeded, failed
  error: null,
}

export const termSearched = createAsyncThunk(
  'searchTerm/termSearched',
  fetchTrackChart,
  {
    condition: (arg, { getState }) => {
      const { trackList } = getState()
      const fetchStatus = trackList.status
      if (fetchStatus === 'loading'){
        return false
      }
    }
  }
)

export const searchTermSlice = createSlice({
  name: 'searchTerm',
  initialState,
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: {
    [termSearched.pending]: (state) => {state.status = 'loading'},
    [termSearched.fulfilled]: (state, action) => {

      state.status = 'suceeded'
    }
  },
})

export default searchTermSlice.reducer
